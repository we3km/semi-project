<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="board">
	<insert id="insertBoardCommon" parameterType="BoardCommon">
		<selectKey keyProperty="boardId" resultType="int"
			order="BEFORE">
			SELECT BOARD_COMMON_SEQ.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO BOARD_COMMON
		(
		BOARD_ID,
		USER_NUM,
		PRODUCT_NAME,
		PRODUCT_COMMENT,
		TRANSACTION_ADDRESS,
		TRANSACTION_CATEGORY,
		PRODUCT_CATEGORY_L,
		CREATE_DATE,
		VIEWS,
		TRANSACTION_STATUS,
		PRODUCT_CATEGORY_M,
		PRODUCT_CATEGORY_S
		) VALUES
		(
		#{boardId} ,
		#{userNum},
		#{productName},
		#{productComment} ,
		#{transactionAddress},
		#{transactionCategory},
		#{productCategoryL},
		DEFAULT,
		DEFAULT,
		DEFAULT,
		#{productCategoryM},
		#{productCategoryS}
		)
	</insert>

	<insert id="insertBoardRental" parameterType="BoardRental">

		INSERT INTO BOARD_RENTAL
		(
		BOARD_ID,
		RENTAL_FEE,
		DEPOSIT,
		RENTAL_START_DATE,
		RENTAL_END_DATE
		) VALUES
		(
		#{boardId},
		#{rentalFee},
		#{deposit},
		#{rentalStartDate} ,
		#{rentalEndDate}
		)


	</insert>
	<insert id="insertBoardShare" parameterType="BoardSharing">

		INSERT INTO BOARD_SHARING
		(
		BOARD_ID,
		SHARING_COUNT
		) VALUES
		(
		#{boardId},
		#{sharingCount}
		)


	</insert>
	
	<insert id="insertBoardAuction" parameterType="BoardAuction">

		INSERT INTO BOARD_AUCTION
		(
		BOARD_ID,
		AUCTION_STARTING_FEE,
		BID_UNIT,
		AUCTION_START_DATE,
		AUCTION_END_DATE
		) VALUES
		(
		#{boardId},
		#{auctionStartingFee},
		#{bidUnit},
		#{auctionStartDate},
		#{auctionEndDate}
		)


	</insert>


	<insert id="insertImg" parameterType="File">

		<selectKey keyProperty="fileId" resultType="int"
			order="BEFORE">
			SELECT FILE_SEQ.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO "FILE"
		(
		FILE_ID,
		CATEGORY_ID,
		FILE_NAME,
		REF_NO
		)
		VALUES
		(
		#{fileId},
		#{categoryId},
		#{fileName},
		#{refNo}
		)

	</insert>
	
	<select id="selectTagExist" parameterType="string" resultType="Tag">
		SELECT TAG_ID, TAG_CONTENT
		FROM TAG
		WHERE TAG_CONTENT= #{tagContent}
	</select>

	<insert id="insertTag" parameterType="Tag">

		<selectKey keyProperty="tagId" resultType="int"
			order="BEFORE">
			SELECT TAG_SEQ.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO TAG
		(
		TAG_ID,
		TAG_CONTENT
		)
		VALUES
		(
		#{tagId},
		#{tagContent}
		)

	</insert>

	<insert id="insertBoardTag" parameterType="BoardTag">

		INSERT INTO BOARD_TAG
		(
		TAG_ID,
		BOARD_ID,
		BOARD_CATEGORY
		)
		VALUES
		(
		#{tagId},
		#{boardId},
		#{boardCategory}
		)

	</insert>


	<select id="selectCategoryList" resultType="productCategory">
		SELECT
		PRODUCT_CATEGORY_NUM,
		CATEGORY_NAME,
		CATEGORY_TIER,
		PARENT_NUM
		FROM PRODUCT_CATEGORY

	</select>

	<select id="getCategoriesByParentNum" parameterType="int"
		resultType="productCategory">
		SELECT
		PRODUCT_CATEGORY_NUM,
		CATEGORY_NAME,
		CATEGORY_TIER,
		PARENT_NUM
		FROM PRODUCT_CATEGORY
		WHERE PARENT_NUM = #{parentNum}

	</select>

	<select id="selectBoardRentalList" 
		resultMap="BoardRentalFileResultMap">
		SELECT *
		FROM (
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE AS,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BR.RENTAL_FEE,
		BR.DEPOSIT,
		BR.RENTAL_START_DATE,
		BR.RENTAL_END_DATE,
		C.CATEGORY_PATH,
		F.FILE_NAME,
		ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
		FROM BOARD_COMMON BC
		JOIN BOARD_RENTAL BR ON BC.BOARD_ID = BR.BOARD_ID
		JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE F.CATEGORY_ID = 6
		)
		WHERE RN = 1
		<!-- <if test="location != null and location != ''">
			 	AND BC.TRANSACTION_ADDRESS = #{location} </if>
		-->	<if test="minRentalFee != null">
				AND RENTAL_FEE >= #{minRentalFee} 
			</if> 
			<if test="maxRentalFee != null">
				AND RENTAL_FEE &lt;= #{maxRentalFee} 
			</if> 
			<if test="startDate != null"> 
				AND RENTAL_START_DATE &gt;= #{startDate} 
			</if> 
			<if test="endDate != null"> 	
				AND RENTAL_END_DATE &lt;= #{endDate} 
			</if>
			<if test="productCategoryL != null and productCategoryL != ''"> 
				AND PRODUCT_CATEGORY_L = #{productCategoryL} 
			</if>
			<if test="productCategoryM != null and productCategoryM != ''"> 
				AND PRODUCT_CATEGORY_M = #{productCategoryM} 
			</if>
			<if test="productCategoryS != null and productCategoryS != ''"> 
				AND PRODUCT_CATEGORY_S = #{productCategoryS} 
			</if>
		<choose>
			<when test="sort == 'views'">
				ORDER BY VIEWS DESC
			</when>
			<!-- <when test="#{sort} == 'dibs'"> ORDER BY b.dibs_count DESC </when> -->
			<when test="sort == 'price'">
				ORDER BY RENTAL_FEE DESC
			</when>
			<otherwise>
				ORDER BY CREATE_DATE DESC
			</otherwise>
		</choose>

	</select>

	<select id="selectBoardRental" parameterType="int"
		resultMap="boardRentalResultMap">
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BR.RENTAL_FEE,
		BR.DEPOSIT,
		BR.RENTAL_START_DATE,
		BR.RENTAL_END_DATE

		FROM BOARD_COMMON BC
		JOIN BOARD_RENTAL BR ON BC.BOARD_ID = BR.BOARD_ID
		WHERE BC.BOARD_ID = #{boardId}

	</select>

	<resultMap id="boardRentalResultMap"
		type="BoardRentalWrapper">
		<association property="boardCommon" javaType="BoardCommon">
			<id property="boardId" column="BOARD_ID" />
			<result property="userNum" column="USER_NUM" />
			<result property="productName" column="PRODUCT_NAME" />
			<result property="productComment" column="PRODUCT_COMMENT" />
			<result property="transactionAddress"
				column="TRANSACTION_ADDRESS" />
			<result property="transactionCategory"
				column="TRANSACTION_CATEGORY" />
			<result property="createDate" column="CREATE_DATE" />
			<result property="views" column="VIEWS" />
			<result property="transactionStatus"
				column="TRANSACTION_STATUS" />
			<result property="productCategoryL"
				column="PRODUCT_CATEGORY_L" />
			<result property="productCategoryM"
				column="PRODUCT_CATEGORY_M" />
			<result property="productCategoryS"
				column="PRODUCT_CATEGORY_S" />
			<!-- BOARD_RENTAL 컬럼들 추가 -->
		</association>
		<!-- BOARD_COMMON 컬럼들 추가 -->

		<association property="boardRental" javaType="BoardRental">
			<id property="boardId" column="BOARD_ID" />
			<result property="rentalFee" column="RENTAL_FEE" />
			<result property="deposit" column="DEPOSIT" />
			<result property="rentalStartDate" column="RENTAL_START_DATE" />
			<result property="rentalEndDate" column="RENTAL_END_DATE" />
			<!-- BOARD_RENTAL 컬럼들 추가 -->
		</association>
	</resultMap>

	<select id="selectWriterRentalList" parameterType="int"
		resultMap="BoardRentalFileResultMap">
		SELECT *
		FROM (
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BR.RENTAL_FEE,
		BR.DEPOSIT,
		BR.RENTAL_START_DATE,
		BR.RENTAL_END_DATE,
		C.CATEGORY_PATH,
		F.FILE_NAME,
		ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
		FROM BOARD_COMMON BC
		JOIN BOARD_RENTAL BR ON BC.BOARD_ID = BR.BOARD_ID
		JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE F.CATEGORY_ID = 6 AND BC.USER_NUM = #{userNum}
		)
		WHERE RN = 1

	</select>

	<select id="selectEqualsCategoryList" parameterType="String"
		resultMap="BoardRentalFileResultMap">
		SELECT *
		FROM (
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BR.RENTAL_FEE,
		BR.DEPOSIT,
		BR.RENTAL_START_DATE,
		BR.RENTAL_END_DATE,
		C.CATEGORY_PATH,
		F.FILE_NAME,
		ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
		FROM BOARD_COMMON BC
		JOIN BOARD_RENTAL BR ON BC.BOARD_ID = BR.BOARD_ID
		JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE F.CATEGORY_ID = 6 AND BC.PRODUCT_CATEGORY_S = #{smallCategory}
		)
		WHERE RN = 1

	</select>


	<resultMap id="BoardRentalFileResultMap"
		type="BoardRentalFileWrapper">
		<association property="boardCommon" javaType="BoardCommon">
			<id property="boardId" column="BOARD_ID" />
			<result property="userNum" column="USER_NUM" />
			<result property="productName" column="PRODUCT_NAME" />
			<result property="productComment" column="PRODUCT_COMMENT" />
			<result property="transactionAddress"
				column="TRANSACTION_ADDRESS" />
			<result property="transactionCategory"
				column="TRANSACTION_CATEGORY" />
			<result property="createDate" column="CREATE_DATE" />
			<result property="views" column="VIEWS" />
			<result property="transactionStatus"
				column="TRANSACTION_STATUS" />
			<result property="productCategoryL"
				column="PRODUCT_CATEGORY_L" />
			<result property="productCategoryM"
				column="PRODUCT_CATEGORY_M" />
			<result property="productCategoryS"
				column="PRODUCT_CATEGORY_S" />
			<!-- BOARD_RENTAL 컬럼들 추가 -->
		</association>
		<!-- BOARD_COMMON 컬럼들 추가 -->

		<association property="boardRental" javaType="BoardRental">
			<id property="boardId" column="BOARD_ID" />
			<result property="rentalFee" column="RENTAL_FEE" />
			<result property="deposit" column="DEPOSIT" />
			<result property="rentalStartDate" column="RENTAL_START_DATE" />
			<result property="rentalEndDate" column="RENTAL_END_DATE" />
			<!-- BOARD_RENTAL 컬럼들 추가 -->
		</association>

		<association property="filePath" javaType="FilePath">
			<result property="categoryPath" column="CATEGORY_PATH" />
			<result property="fileName" column="FILE_NAME" />
		</association>
	</resultMap>




	<select id="selectWriterNickname" parameterType="int"
		resultType="String">
		SELECT
		NICK_NAME

		FROM USER_TB
		WHERE USER_NUM = #{userNum}

	</select>

	<select id="selectTags" parameterType="int" resultType="String">
		SELECT
		TAG_CONTENT

		FROM BOARD_TAG BT
		JOIN TAG T USING(TAG_ID)
		WHERE BT.BOARD_ID = #{boardId}
	</select>

	<update id="increaseViews" parameterType="int">
		UPDATE BOARD_COMMON SET
		VIEWS = VIEWS +1
		WHERE BOARD_ID = #{boardId}
	</update>

	<select id="isLiked" parameterType="Dibs" resultType="int">
		SELECT
		COUNT(*)
		FROM DIBS
		WHERE LIKES_USER_ID = #{likesUserId} AND BOARD_ID = #{boardId} AND
		BOARD_CATEGORY = #{boardCategory}
	</select>

	<insert id="insertLike" parameterType="Dibs">
		INSERT INTO DIBS(BOARD_ID, LIKES_USER_ID, BOARD_CATEGORY)
		VALUES (#{boardId}, #{likesUserId}, #{boardCategory})
	</insert>

	<delete id="deleteLike" parameterType="Dibs">
		DELETE FROM DIBS
		WHERE LIKES_USER_ID = #{likesUserId} AND BOARD_ID = #{boardId} AND
		BOARD_CATEGORY = #{boardCategory}
	</delete>

	<select id="countDibs" parameterType="Dibs" resultType="int">
		SELECT COUNT(*)
		FROM DIBS
		WHERE BOARD_ID = #{boardId} AND BOARD_CATEGORY = #{boardCategory}
	</select>

	<select id="selectMannerScore" parameterType="int"
		resultType="int">
		SELECT
		ROUND(AVG(SCORE))
		FROM MANNER
		GROUP BY TARGET_USER_NUM
		HAVING TARGET_USER_NUM =
		#{writerUserNum}
	</select>


	<select id="selectImgList" parameterType="int"
		resultType="FilePath">
		SELECT
		C.CATEGORY_PATH,
		F.FILE_NAME

		FROM "FILE" F
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE
		F.REF_NO = #{boardId} AND F.CATEGORY_ID = 6

	</select>
	
	<select id="selectShareImgList" parameterType="int"
		resultType="FilePath">
		SELECT
		C.CATEGORY_PATH,
		F.FILE_NAME

		FROM "FILE" F
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE
		F.REF_NO = #{boardId} AND F.CATEGORY_ID = 7

	</select>
	
		<select id="selectAuctionImgList" parameterType="int"
		resultType="FilePath">
		SELECT
		C.CATEGORY_PATH,
		F.FILE_NAME

		FROM "FILE" F
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE
		F.REF_NO = #{boardId} AND F.CATEGORY_ID = 8

	</select>

	<select id="selectLikedBoardIdsByUser" parameterType="int"
		resultType="int">
		SELECT BOARD_ID
		FROM DIBS
		WHERE LIKES_USER_ID = #{userNum}
	</select>
	
	<select id="selectUserAddress" parameterType="int"
		resultType="String">
		SELECT ADDRESS
		FROM USER_TB
		WHERE USER_NUM = #{userNum}
	</select>
	<!-- <select id="selectWriterImg" parameterType="int" resultType="FilePath"> 
		SELECT C.CATEGORY_PATH, F.FILE_NAME FROM "FILE" F JOIN CATEGORY C ON F.CATEGORY_ID 
		= C.CATEGORY_ID WHERE F.REF_NO = #{boardId} AND F.CATEGORY_ID = 6 AND ROWNUM=1; 
		</select> -->
		
		
		
	<select id="selectBoardShareList" resultMap="BoardShareFileResultMap">
		SELECT *
		FROM (
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE AS,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BS.SHARING_COUNT,
		C.CATEGORY_PATH,
		F.FILE_NAME,
		ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
		FROM BOARD_COMMON BC
		JOIN BOARD_SHARING BS ON BC.BOARD_ID = BS.BOARD_ID
		JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE F.CATEGORY_ID = 7
		)
		WHERE RN = 1
		<!-- <if test="location != null and location != ''">
			 	AND BC.TRANSACTION_ADDRESS = #{location} </if>
		-->	
			<if test="productCategoryL != null and productCategoryL != ''"> 
				AND PRODUCT_CATEGORY_L = #{productCategoryL} 
			</if>
			<if test="productCategoryM != null and productCategoryM != ''"> 
				AND PRODUCT_CATEGORY_M = #{productCategoryM} 
			</if>
			<if test="productCategoryS != null and productCategoryS != ''"> 
				AND PRODUCT_CATEGORY_S = #{productCategoryS} 
			</if>
		<choose>
			<when test="sort == 'views'">
				ORDER BY VIEWS DESC
			</when>
			<!-- <when test="#{sort} == 'dibs'"> ORDER BY b.dibs_count DESC </when> -->
			<otherwise>
				ORDER BY CREATE_DATE DESC
			</otherwise>
		</choose>
		

	</select>
	
		<select id="selectBoardShare" parameterType="int"
		resultMap="boardShareResultMap">
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BS.SHARING_COUNT

		FROM BOARD_COMMON BC
		JOIN BOARD_SHARING BS ON BC.BOARD_ID = BS.BOARD_ID
		WHERE BC.BOARD_ID = #{boardId}

	</select>
	
		<select id="selectWriterShareList" parameterType="int"
		resultMap="BoardShareFileResultMap">
		SELECT *
		FROM (
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BS.SHARING_COUNT,
		C.CATEGORY_PATH,
		F.FILE_NAME,
		ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
		FROM BOARD_COMMON BC
		JOIN BOARD_SHARING BS ON BC.BOARD_ID = BS.BOARD_ID
		JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE F.CATEGORY_ID = 7 AND BC.USER_NUM = #{userNum}
		)
		WHERE RN = 1

	</select>
	
	<select id="selectEqualsCategoryShareList" parameterType="String"
		resultMap="BoardShareFileResultMap">
		SELECT *
		FROM (
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BS.SHARING_COUNT,
		C.CATEGORY_PATH,
		F.FILE_NAME,
		ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
		FROM BOARD_COMMON BC
		JOIN BOARD_SHARING BS ON BC.BOARD_ID = BS.BOARD_ID
		JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
		JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
		WHERE F.CATEGORY_ID = 7 AND BC.PRODUCT_CATEGORY_S = #{smallCategory}
		)
		WHERE RN = 1

	</select>
		<resultMap id="BoardShareFileResultMap"
		type="BoardShareFileWrapper">
		<association property="boardCommon" javaType="BoardCommon">
			<id property="boardId" column="BOARD_ID" />
			<result property="userNum" column="USER_NUM" />
			<result property="productName" column="PRODUCT_NAME" />
			<result property="productComment" column="PRODUCT_COMMENT" />
			<result property="transactionAddress"
				column="TRANSACTION_ADDRESS" />
			<result property="transactionCategory"
				column="TRANSACTION_CATEGORY" />
			<result property="createDate" column="CREATE_DATE" />
			<result property="views" column="VIEWS" />
			<result property="transactionStatus"
				column="TRANSACTION_STATUS" />
			<result property="productCategoryL"
				column="PRODUCT_CATEGORY_L" />
			<result property="productCategoryM"
				column="PRODUCT_CATEGORY_M" />
			<result property="productCategoryS"
				column="PRODUCT_CATEGORY_S" />
		</association>
		<!-- BOARD_COMMON 컬럼들 추가 -->

		<association property="boardSharing" javaType="BoardSharing">
			<id property="boardId" column="BOARD_ID" />
			<result property="sharingCount" column="SHARING_COUNT" />
			
			<!-- BOARD_SHARING 컬럼들 추가 -->
		</association>

		<association property="filePath" javaType="FilePath">
			<result property="categoryPath" column="CATEGORY_PATH" />
			<result property="fileName" column="FILE_NAME" />
		</association>
	</resultMap>
	
		<resultMap id="boardShareResultMap"
		type="BoardShareWrapper">
		<association property="boardCommon" javaType="BoardCommon">
			<id property="boardId" column="BOARD_ID" />
			<result property="userNum" column="USER_NUM" />
			<result property="productName" column="PRODUCT_NAME" />
			<result property="productComment" column="PRODUCT_COMMENT" />
			<result property="transactionAddress"
				column="TRANSACTION_ADDRESS" />
			<result property="transactionCategory"
				column="TRANSACTION_CATEGORY" />
			<result property="createDate" column="CREATE_DATE" />
			<result property="views" column="VIEWS" />
			<result property="transactionStatus"
				column="TRANSACTION_STATUS" />
			<result property="productCategoryL"
				column="PRODUCT_CATEGORY_L" />
			<result property="productCategoryM"
				column="PRODUCT_CATEGORY_M" />
			<result property="productCategoryS"
				column="PRODUCT_CATEGORY_S" />
		</association>
		<!-- BOARD_COMMON 컬럼들 추가 -->

		<association property="boardSharing" javaType="BoardSharing">
			<id property="boardId" column="BOARD_ID" />
			<result property="sharingCount" column="SHARING_COUNT" />
			
			<!-- BOARD_SHARING 컬럼들 추가 -->
		</association>
	</resultMap>
	
		<select id="selectBoardAuction" parameterType="int"
		resultMap="boardAuctionResultMap">
		SELECT
		BC.BOARD_ID,
		BC.USER_NUM,
		BC.PRODUCT_NAME,
		BC.PRODUCT_COMMENT,
		BC.TRANSACTION_ADDRESS,
		BC.TRANSACTION_CATEGORY,
		BC.CREATE_DATE,
		BC.VIEWS,
		BC.TRANSACTION_STATUS,
		BC.PRODUCT_CATEGORY_L,
		BC.PRODUCT_CATEGORY_M,
		BC.PRODUCT_CATEGORY_S,
		BA.AUCTION_STARTING_FEE,
		BA.BID_UNIT,
		BA.AUCTION_START_DATE,
		BA.AUCTION_END_DATE
		FROM BOARD_COMMON BC
		JOIN BOARD_AUCTION BA ON BC.BOARD_ID = BA.BOARD_ID
		WHERE BC.BOARD_ID = #{boardId}

	</select>
	
	
	
		<resultMap id="boardAuctionResultMap"
		type="BoardAuctionWrapper">
		<association property="boardCommon" javaType="BoardCommon">
			<id property="boardId" column="BOARD_ID" />
			<result property="userNum" column="USER_NUM" />
			<result property="productName" column="PRODUCT_NAME" />
			<result property="productComment" column="PRODUCT_COMMENT" />
			<result property="transactionAddress"
				column="TRANSACTION_ADDRESS" />
			<result property="transactionCategory"
				column="TRANSACTION_CATEGORY" />
			<result property="createDate" column="CREATE_DATE" />
			<result property="views" column="VIEWS" />
			<result property="transactionStatus"
				column="TRANSACTION_STATUS" />
			<result property="productCategoryL"
				column="PRODUCT_CATEGORY_L" />
			<result property="productCategoryM"
				column="PRODUCT_CATEGORY_M" />
			<result property="productCategoryS"
				column="PRODUCT_CATEGORY_S" />
		</association>
		<!-- BOARD_COMMON 컬럼들 추가 -->

		<association property="boardAuction" javaType="BoardAuction">
			<id property="boardId" column="BOARD_ID" />
			<result property="auctionStartingFee" column="AUCTION_STARTING_FEE" />
			<result property="bidUnit" column="BID_UNIT" />
			<result property="auctionStartDate" column="AUCTION_START_DATE" />
			<result property="auctionEndDate" column="AUCTION_END_DATE" />
			<!-- BOARD_AUCTION 컬럼들 추가 -->
		</association>
	</resultMap>
	
	<select id="selectWriterAuctionList" parameterType="int"
		resultMap="BoardAuctionFileResultMap">
		SELECT *
FROM (
    SELECT
        BC.BOARD_ID,
        BC.USER_NUM,
        BC.PRODUCT_NAME,
        BC.PRODUCT_COMMENT,
        BC.TRANSACTION_ADDRESS,
        BC.TRANSACTION_CATEGORY,
        BC.CREATE_DATE,
        BC.VIEWS,
        BC.TRANSACTION_STATUS,
        BC.PRODUCT_CATEGORY_L,
        BC.PRODUCT_CATEGORY_M,
        BC.PRODUCT_CATEGORY_S,
        BA.AUCTION_STARTING_FEE,
        BA.BID_UNIT,
        BA.AUCTION_START_DATE,
        BA.AUCTION_END_DATE,
        C.CATEGORY_PATH,
        F.FILE_NAME,
        MAX_BID.BIDDING_USER_NUM,
        MAX_BID.BID,
        ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
    FROM BOARD_COMMON BC
    JOIN BOARD_AUCTION BA ON BC.BOARD_ID = BA.BOARD_ID
    JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
    JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
    LEFT JOIN (
        SELECT *
        FROM (
            SELECT
                AB.BOARD_ID,
                AB.BIDDING_USER_NUM,
                AB.BID,
                ROW_NUMBER() OVER (PARTITION BY AB.BOARD_ID ORDER BY AB.BID DESC) AS BID_RANK
            FROM AUCTION_BIDDING AB
        ) 
        WHERE BID_RANK = 1
    ) MAX_BID ON MAX_BID.BOARD_ID = BC.BOARD_ID
    WHERE F.CATEGORY_ID = 8 AND BC.USER_NUM = #{userNum}
)
WHERE RN = 1


	</select>
	
		<select id="selectEqualsCategoryAuctionList" parameterType="String"
		resultMap="BoardAuctionFileResultMap">
SELECT *
FROM (
    SELECT
        BC.BOARD_ID,
        BC.USER_NUM,
        BC.PRODUCT_NAME,
        BC.PRODUCT_COMMENT,
        BC.TRANSACTION_ADDRESS,
        BC.TRANSACTION_CATEGORY,
        BC.CREATE_DATE,
        BC.VIEWS,
        BC.TRANSACTION_STATUS,
        BC.PRODUCT_CATEGORY_L,
        BC.PRODUCT_CATEGORY_M,
        BC.PRODUCT_CATEGORY_S,
        BA.AUCTION_STARTING_FEE,
        BA.BID_UNIT,
        BA.AUCTION_START_DATE,
        BA.AUCTION_END_DATE,
        C.CATEGORY_PATH,
        F.FILE_NAME,
        MAX_BID.BID AS HIGHEST_BID,
        ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
    FROM BOARD_COMMON BC
    JOIN BOARD_AUCTION BA ON BC.BOARD_ID = BA.BOARD_ID
    JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
    JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
    LEFT JOIN (
        SELECT *
        FROM (
            SELECT
                AB.BOARD_ID,
                AB.BIDDING_USER_NUM,
                AB.BID,
                ROW_NUMBER() OVER (PARTITION BY AB.BOARD_ID ORDER BY AB.BID DESC) AS BID_RANK
            FROM AUCTION_BIDDING AB
        ) 
        WHERE BID_RANK = 1
    ) MAX_BID ON MAX_BID.BOARD_ID = BC.BOARD_ID
    WHERE F.CATEGORY_ID = 8 AND BC.PRODUCT_CATEGORY_S = #{smallCategory}
)
WHERE RN = 1
	</select>
	
	<select id="selectBoardAuctionList" 
		resultMap="BoardAuctionFileResultMap">
SELECT *
FROM (
    SELECT
        BC.BOARD_ID,
        BC.USER_NUM,
        BC.PRODUCT_NAME,
        BC.PRODUCT_COMMENT,
        BC.TRANSACTION_ADDRESS,
        BC.TRANSACTION_CATEGORY,
        BC.CREATE_DATE,
        BC.VIEWS,
        BC.TRANSACTION_STATUS,
        BC.PRODUCT_CATEGORY_L,
        BC.PRODUCT_CATEGORY_M,
        BC.PRODUCT_CATEGORY_S,
        BA.AUCTION_STARTING_FEE,
        BA.BID_UNIT,
        BA.AUCTION_START_DATE,
        BA.AUCTION_END_DATE,
        C.CATEGORY_PATH,
        F.FILE_NAME,
        NVL(MAX_BID.BID, BA.AUCTION_STARTING_FEE) AS HIGHEST_BID,
        ROW_NUMBER() OVER (PARTITION BY BC.BOARD_ID ORDER BY F.FILE_NAME) AS RN
    FROM BOARD_COMMON BC
    JOIN BOARD_AUCTION BA ON BC.BOARD_ID = BA.BOARD_ID
    JOIN "FILE" F ON F.REF_NO = BC.BOARD_ID
    JOIN CATEGORY C ON F.CATEGORY_ID = C.CATEGORY_ID
    LEFT JOIN (
        SELECT *
        FROM (
            SELECT
                AB.BOARD_ID,
                AB.BIDDING_USER_NUM,
                AB.BID,
                ROW_NUMBER() OVER (PARTITION BY AB.BOARD_ID ORDER BY AB.BID DESC) AS BID_RANK
            FROM AUCTION_BIDDING AB
        ) 
        WHERE BID_RANK = 1
    ) MAX_BID ON MAX_BID.BOARD_ID = BC.BOARD_ID
    WHERE F.CATEGORY_ID = 8
)
WHERE RN = 1
		<!-- <if test="location != null and location != ''">
			 	AND BC.TRANSACTION_ADDRESS = #{location} </if>
		-->	
			<if test="startDate != null"> 
				AND AUCTION_START_DATE &gt;= #{startDate} 
			</if> 
			<if test="endDate != null"> 	
				AND AUCTION_END_DATE &lt;= #{endDate} 
			</if>
			<if test="productCategoryL != null and productCategoryL != ''"> 
				AND PRODUCT_CATEGORY_L = #{productCategoryL} 
			</if>
			<if test="productCategoryM != null and productCategoryM != ''"> 
				AND PRODUCT_CATEGORY_M = #{productCategoryM} 
			</if>
			<if test="productCategoryS != null and productCategoryS != ''"> 
				AND PRODUCT_CATEGORY_S = #{productCategoryS} 
			</if>
		<choose>
			<when test="sort == 'views'">
				ORDER BY VIEWS DESC
			</when>
			<when test="sort == 'highestBid'">
<!-- 				<choose>
					<when test="HIGHEST_BID"
				</choose> -->
				ORDER BY HIGHEST_BID DESC
			</when>
			<otherwise>
				ORDER BY CREATE_DATE DESC
			</otherwise>
		</choose>

	</select>
	
	<resultMap id="BoardAuctionFileResultMap"
		type="BoardAuctionFileWrapper">
		
		<result property="highestBid" column="HIGHEST_BID"/>
		<association property="boardCommon" javaType="BoardCommon">
			<id property="boardId" column="BOARD_ID" />
			<result property="userNum" column="USER_NUM" />
			<result property="productName" column="PRODUCT_NAME" />
			<result property="productComment" column="PRODUCT_COMMENT" />
			<result property="transactionAddress"
				column="TRANSACTION_ADDRESS" />
			<result property="transactionCategory"
				column="TRANSACTION_CATEGORY" />
			<result property="createDate" column="CREATE_DATE" />
			<result property="views" column="VIEWS" />
			<result property="transactionStatus"
				column="TRANSACTION_STATUS" />
			<result property="productCategoryL"
				column="PRODUCT_CATEGORY_L" />
			<result property="productCategoryM"
				column="PRODUCT_CATEGORY_M" />
			<result property="productCategoryS"
				column="PRODUCT_CATEGORY_S" />
			<!-- BOARD_RENTAL 컬럼들 추가 -->
		</association>
		<!-- BOARD_COMMON 컬럼들 추가 -->

		<association property="boardAuction" javaType="BoardAuction">
			<id property="boardId" column="BOARD_ID" />
			<result property="auctionStartingFee" column="AUCTION_STARTING_FEE" />
			<result property="bidUnit" column="BID_UNIT" />
			<result property="auctionStartDate" column="AUCTION_START_DATE" />
			<result property="auctionEndDate" column="AUCTION_END_DATE" />
			<!-- BOARD_AUCTION 컬럼들 추가 -->
		</association>

		<association property="filePath" javaType="FilePath">
			<result property="categoryPath" column="CATEGORY_PATH" />
			<result property="fileName" column="FILE_NAME" />
		</association>
		
	</resultMap>
	
	<insert id="saveBid" parameterType="AuctionBidding">
		INSERT INTO AUCTION_BIDDING(BOARD_ID, BIDDING_USER_NUM, BID)
		VALUES (#{boardId}, #{biddingUserNum}, #{bid})
	</insert>
		
	<select id="selectBidList" parameterType="int" resultType="AuctionBidding"
		>
		SELECT
			AB.BOARD_ID,
			AB.BIDDING_USER_NUM,
			AB.BID,
			U.NICK_NAME
		FROM AUCTION_BIDDING AB
		JOIN USER_TB U ON AB.BIDDING_USER_NUM = U.USER_NUM
		WHERE BOARD_ID = #{boardId}
		ORDER BY AB.BID DESC

	</select>
	
	<select id="findBidByUserAndBoard" parameterType="map" resultType="AuctionBidding"
		>
		SELECT
			AB.BOARD_ID,
			AB.BIDDING_USER_NUM,
			AB.BID,
			U.NICK_NAME
		FROM AUCTION_BIDDING AB
		JOIN USER_TB U ON AB.BIDDING_USER_NUM = U.USER_NUM
		WHERE BOARD_ID = #{boardId} AND BIDDING_USER_NUM = #{userNum}

	</select>
	
	<update id="updateBid" parameterType="AuctionBidding">
		UPDATE AUCTION_BIDDING
		SET BID = #{bid}
		WHERE BIDDING_USER_NUM = #{biddingUserNum}
			AND BOARD_ID = #{boardId}
	</update>
	
	<select id="selectBiddingWinner" resultType="BiddingWinner">
		SELECT BOARD_ID, BIDDING_USER_NUM AS USER_NUM, BID
			FROM (
			  SELECT B.BOARD_ID, AB.BIDDING_USER_NUM, AB.BID,
			         RANK() OVER (PARTITION BY B.BOARD_ID ORDER BY AB.BID DESC) AS RANKING
			  FROM BOARD_AUCTION B
			  JOIN AUCTION_BIDDING AB ON B.BOARD_ID = AB.BOARD_ID
			  WHERE B.AUCTION_END_DATE &lt;= SYSDATE
			)
		WHERE RANKING = 1 AND BOARD_ID = ${boardId}
	</select>
	
	<insert id="insertBiddingWinner" parameterType="BiddingWinner">
	    MERGE INTO BIDDING_WINNER BW
	    USING (SELECT #{boardId} AS boardId, #{userNum} AS userNum FROM dual) src
	    ON (BW.BOARD_ID = src.boardId AND BW.USER_NUM = src.userNum)
	    WHEN NOT MATCHED THEN
	        INSERT (BOARD_ID, USER_NUM, BID)
	        VALUES (#{boardId}, #{userNum}, #{bid})
	</insert>
</mapper>