<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!--  DB연결 설정  -->
	<context:property-placeholder
	location="classpath:driver.properties" />
	<!-- 1단계 DB연결 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${datasource.driver}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
	</bean>
	<!-- 2단계 MyBatis Spring 을 활용하여 SqlSessionFactory생성 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSessionFactory">
		<!-- mybatis설정 파일 위치 지정 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:mapper/**/*.xml" />
	</bean>
	<!-- 3단계 SqlsessionTemplate을 제공하는 bean 등록 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate"
		id="sqlSession">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- transactionManger - 데이터베이스 트랜잭션 처리를 담당하는 bean객체 - jdbc를 통해 커넥션을 얻어 
		온 후, 트랜잭션을 시작/커밋/롤백 처리를 담당 - @Transactional어노테이션을 통해 트랜잭션을 선언적으로 처리 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
</beans>
